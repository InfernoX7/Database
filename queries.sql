/*3. Select all details of each member. (2 marks)*/SELECT * FROM member;/*List each member’s names and age together with the name of their trainer, no IDs to bedisplayed. (3 marks)*/SELECT firstName, lastName, age, trainerName FROM member, trainerWHERE member.trainerID = trainer.trainerID;/*5. Insert a trainer. (3 marks)*/INSERT INTO trainer (trainerID, trainerName) VALUES (NULL, "trainerName");/*6. Delete a trainer. (3 marks)*/DELETE FROM trainerWHERE trainerName = trainerName;/*7. Update a member’s last name given their first and last names. (4 marks)*/UPDATE member SET lastName ="Last Name"WHERE firstName = "First Name"AND lastName = "Last Name";/*/8. Enrol a member in a class given the member ID and the class ID. (4 marks)/*/INSERT INTO enrolment (enrolmentID, memberID, classID) VALUES (NULL, memberID, classID)WHERE;/*9. List each member’s names and the classes that each member is enrolled on together withthe class trainer’s name. (4 marks)*/ SELECT firstName, lastName, className, trainerName FROM member, _class, trainerWHERE enrolment.memberID = enrolment.classIDAND _class.trainerID = trainer.trainerID;/*10. Show payment details for a member given their name. Both first name and last nametogether with all payment details should be included, no IDs to be included, ordered by lastname then first name. (5 marks)/*/SELECT firstName, lastName, amount, _month FROM member, payment WHERE firstName = "First Name"AND lastName = "Last Name"AND member.memberID = payment.memberID;/*/11. Enrol a member in a class given the member’s names and the class name. (6 marks)/*//*/INSERT INTO enrolment (enrolmentID, memberID, classID) VALUES (NULL, (SELECT memberID FROM member WHERE firstName ="First Name" AND lastName ="Last Name"),(SELECT classID FROM _class WHERE className ="Class Name"));/*/12. Given a trainer’s name list all classes that s/he takes, together with the names of membersin those classes ordered by last name and then by first name of the member. (6 marks)SELECT firstName, lastName, className, 
